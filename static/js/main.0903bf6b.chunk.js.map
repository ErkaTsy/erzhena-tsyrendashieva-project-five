{"version":3,"sources":["firebase.js","Goals.js","AddGoals.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Goals","state","goals","database","ref","on","data","firebaseDataObj","val","newGoals","Object","keys","map","key","setState","console","log","this","goal","index","goalName","goalDeadline","goalNote","Component","AddGoals","addNewGoal","e","preventDefault","push","userNewGoal","inputNewGoal","target","value","selectedDate","Date","date","className","onChange","htmlFor","type","id","selected","setSelectedDate","onClick","GOAL","ADDGOAL","App","currentComponent","showComponent","bind","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAiBAA,IAASC,cAXc,CACrBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAMMR,QAAf,ECiCeS,E,kDAhDb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAO,IAHG,E,gEASO,IAAD,OAEJX,EAASY,WAAWC,MAE5BC,GAAG,SAAS,SAACC,GACjB,IAAMC,EAAkBD,EAAKE,MAIvBC,EAAWC,OAAOC,KAAKJ,GAAiBK,KAAI,SAACC,GAAD,OAASN,EAAgBM,MAE3E,EAAKC,SACH,CACEZ,MAAOO,IAGTM,QAAQC,IAAI,EAAKf,MAAMC,MAAO,wB,+BAKlC,OACE,gCACE,qDACA,6BACGe,KAAKhB,MAAMC,MAAMU,KAAI,SAACM,EAAMC,GAC3B,OACE,+BACE,4BAAID,EAAKE,WACT,4BAAIF,EAAKG,eACT,4BAAIH,EAAKI,aAHFH,e,GArCHI,a,iBC2DLC,G,wDAxDb,aAAe,IAAD,8BACZ,gBAuBFC,WAAa,SAACC,GACZA,EAAEC,iBACapC,EAASY,WAAWC,MAC5BwB,KAAK,EAAK3B,MAAM4B,cA3BX,EA8BdC,aAAe,SAACJ,GACd,EAAKZ,SAAS,CACVe,YAAaH,EAAEK,OAAOC,SA9B1B,EAAK/B,MAAQ,CACXmB,SAAU,GACVC,aAAc,GACdC,SAAU,GACVW,aAAc,IAAIC,KAClBL,YAAa,IAPH,E,gEAaEtC,EAASY,WAAWC,Q,sCAKpB+B,GACdlB,KAAKH,SAAS,CACZmB,aAAcE,M,+BAgBR,IAAD,OACP,OACE,qBAAKC,UAAU,sBAAf,SACE,uBAAMC,SAAUpB,KAAKa,aAArB,UACE,uBAAOQ,QAAQ,cAAf,+BACA,uBAAOC,KAAK,OAAOC,GAAG,gBACtB,uBAAOF,QAAQ,eAAf,sBACA,cAAC,IAAD,CACEG,SAAUxB,KAAKhB,MAAMgC,aACrBI,SAAU,SAACF,GAAD,OAAU,EAAKO,gBAAgBP,MAE3C,uBAAOG,QAAQ,WAAf,kBACA,6BACA,wBAAQK,QAAS1B,KAAKQ,WAAtB,mC,GAlDaF,cCEjBqB,G,OAAO,QACPC,EAAU,UAwCDC,E,kDArCb,aAAc,IAAD,8BACX,gBACK7C,MAAQ,CACX8C,iBAAiBH,GAGnB,EAAKI,cAAgB,EAAKA,cAAcC,KAAnB,gBANV,E,0DASCC,GACZjC,KAAKH,SAAS,CACZiC,iBAAiBG,M,+BAKZ,IAAD,OACUjC,KAAKhB,MAAbC,MAER,OACE,qBAAKkC,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,iDACA,wBAAQO,QAAS,kBAAM,EAAKK,cAAcH,IAA1C,8BAGF,sBAAKT,UAAU,eAAf,UACGnB,KAAKhB,MAAM8C,mBAAqBH,GAAQ,cAAC,EAAD,IACxC3B,KAAKhB,MAAM8C,mBAAqBF,GAAW,cAAC,EAAD,gB,GA9BtCtB,aCEH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0903bf6b.chunk.js","sourcesContent":["// import firebase SDK from npm install firebase nade package\r\nimport firebase from 'firebase/app';\r\n// realtime database library\r\nimport 'firebase/database';\r\n\r\n// goal tracker app configuration object\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA5rvQYwW9E00UGAAj8f0IxOQdkHbKgdFA\",\r\n  authDomain: \"goal-tracker-app-53782.firebaseapp.com\",\r\n  databaseURL: \"https://goal-tracker-app-53782.firebaseio.com\",\r\n  projectId: \"goal-tracker-app-53782\",\r\n  storageBucket: \"goal-tracker-app-53782.appspot.com\",\r\n  messagingSenderId: \"747924635501\",\r\n  appId: \"1:747924635501:web:4e5f0c23821f043ace2464\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { Component, useState} from 'react';\r\nimport firebase from \"./firebase.js\";\r\n\r\nclass Goals extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      goals: []\r\n      // goalName: \"\",\r\n      // goalDeadline: \"\",\r\n      // goalNote: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // make a reference to the database\r\n    const dbRef = firebase.database().ref();\r\n    // get data from the database\r\n    dbRef.on(\"value\", (data) => {\r\n      const firebaseDataObj = data.val();\r\n      // console.log(firebaseDataObj);\r\n      // make an empty array \r\n\r\n      const newGoals = Object.keys(firebaseDataObj).map((key) => firebaseDataObj[key]);\r\n      // console.log(newGoals);\r\n      this.setState(\r\n        {\r\n          goals: newGoals\r\n        }\r\n      )\r\n        console.log(this.state.goals, \"states property\");\r\n       })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Here are goal lists</h1>\r\n        <ul>\r\n          {this.state.goals.map((goal, index) => {\r\n            return (\r\n              <li key={index}>\r\n                <p>{goal.goalName}</p>\r\n                <p>{goal.goalDeadline}</p>\r\n                <p>{goal.goalNote}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Goals;","import { Component, useState } from \"react\";\r\nimport firebase from './firebase.js';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nclass AddGoals extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      goalName: \"\",\r\n      goalDeadline: \"\",\r\n      goalNote: \"\",\r\n      selectedDate: new Date(),\r\n      userNewGoal: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // make a reference to the database\r\n    const dbRef = firebase.database().ref();\r\n    // get data from\r\n  }\r\n\r\n//create function that changes date was selected by user\r\n  setSelectedDate(date) {\r\n    this.setState({\r\n      selectedDate: date,\r\n    });\r\n  }\r\n\r\n  addNewGoal = (e) => {\r\n    e.preventDefault();\r\n     const dbRef = firebase.database().ref();\r\n     dbRef.push(this.state.userNewGoal);   \r\n  };\r\n\r\n  inputNewGoal = (e) =>{\r\n    this.setState({\r\n        userNewGoal: e.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"add-goals-container\">\r\n        <form onChange={this.inputNewGoal}>\r\n          <label htmlFor=\"newGoalName\">Name of your goal</label>\r\n          <input type=\"text\" id=\"newGoalName\" />\r\n          <label htmlFor=\"goalDeadline\">Deadline</label>\r\n          <DatePicker\r\n            selected={this.state.selectedDate}\r\n            onChange={(date) => this.setSelectedDate(date)}\r\n          />\r\n          <label htmlFor=\"goalNote\">Note</label>\r\n          <textarea></textarea>\r\n          <button onClick={this.addNewGoal}>Add new goal</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddGoals;","import { Component, useState } from 'react';\nimport firebase from './firebase.js';\nimport Goals from './Goals.js';\nimport AddGoals from './AddGoals.js';\nimport './App.css';\n\n//define global variables\nconst GOAL = 'GOAL';\nconst ADDGOAL = 'ADDGOAL';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      currentComponent:GOAL\n    };\n\n    this.showComponent = this.showComponent.bind(this);\n  }\n  \n  showComponent(name){\n    this.setState({\n      currentComponent:name\n    })\n  }\n  \n\n  render(){  \n    const { goals} =this.state;\n  \n    return (\n      <div className=\"App\">\n        <div className=\"App-wrapper App-main\">\n          <div className=\"Side-section\">\n            <button>userAccount</button>\n            <button onClick={() => this.showComponent(ADDGOAL)}>Add your goal</button>\n           \n          </div>\n          <div className=\"Main-section\">\n            {this.state.currentComponent === GOAL && <Goals/>}\n            {this.state.currentComponent === ADDGOAL && <AddGoals />}\n          </div>\n        </div>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}