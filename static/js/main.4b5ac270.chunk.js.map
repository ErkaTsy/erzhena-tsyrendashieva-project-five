{"version":3,"sources":["firebase.js","Goals.js","AddGoals.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Goals","removeGoal","goalId","database","ref","props","userId","child","remove","updateGoal","goal","achieveGoal","id","setState","achieved","document","getElementById","style","background","handleShow","event","stopPropagation","goalNameElement","fullGoalInfoElement","display","state","goals","active","dbRef","console","log","this","on","data","firebaseDataObj","val","newGoals","Object","keys","map","key","className","index","onClick","e","goalName","goalDeadline","goalNote","Component","UPDATE","AddGoals","addNewGoal","preventDefault","date","getDate","parseInt","getMonth","getFullYear","userNewGoal","push","displayGoals","formSubmitNewGoal","target","value","editCurrentGoal","update","goalView","Date","bind","currentGoal","length","constructor","dateParts","split","onChange","htmlFor","type","selected","minDate","setGoalDeadline","class","require","GOAL","ADDGOAL","App","currentComponent","showComponent","auth","signInAnonymously","onAuthStateChanged","user","uid","name","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"ySAiBAA,IAASC,cAXc,CACrBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAMMR,QAAf,E,QCoIeS,E,kDAnJb,aAAe,IAAD,8BACZ,gBAoCFC,WAAa,SAACC,GACEX,EAASY,WAAWC,IAAI,SAAW,EAAKC,MAAMC,QACtDC,MAAML,GAAQM,UAvCR,EA2CdC,WAAa,SAACC,GACZ,EAAKL,MAAMI,WAAWC,IA5CV,EA+CdC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZC,UAAU,IAESC,SAASC,eAAeJ,EAAK,WACnCK,MAAMC,WAAa,aApDtB,EAwDdC,WAAa,SAACC,EAAOR,GACnBQ,EAAMC,kBACN,IAAIC,EAAkBP,SAASC,eAAeJ,EAAK,YAC/CW,EAAsBR,SAASC,eAAeJ,EAAK,gBAEjB,SAAlCU,EAAgBL,MAAMO,SACxBF,EAAgBL,MAAMO,QAAU,QAChCD,EAAoBN,MAAMO,QAAU,SAEpCF,EAAgBL,MAAMO,QAAU,OAChCD,EAAoBN,MAAMO,QAAU,UAhEtC,EAAKC,MAAQ,CACXC,MAAO,GACPC,OAAQ,GACRC,MAAO,KACPd,UAAU,GAEZe,QAAQC,IAAI,EAAKL,MAAME,OAAQ,OARnB,E,gEAWO,IAAD,OAClBE,QAAQC,IAAI,QAASC,KAAK1B,MAAMC,QAEhC,IAAMsB,EAAQrC,EAASY,WAAWC,IAAI,SAAW2B,KAAK1B,MAAMC,QAC5DyB,KAAKlB,SAAS,CACZe,MAAOA,IAGTA,EAAMI,GAAG,SAAS,SAACC,GACjB,IAAMC,EAAkBD,EAAKE,MAC7B,GAAID,EAAiB,CACnB,IAAME,EAAWC,OAAOC,KAAKJ,GAAiBK,KAAI,SAACC,GACjD,OAAO,2BAAKN,EAAgBM,IAA5B,IAAkC5B,GAAI4B,OAExC,EAAK3B,SAAS,CACZa,MAAOU,SAGT,EAAKvB,SAAS,CACZa,MAAO,U,+BAwCL,IAAD,OACP,OACE,sBAAKe,UAAU,gBAAf,UACE,8CACA,qBAAKA,UAAU,8BAAf,SACE,6BACGV,KAAKN,MAAMC,MAAMa,KAAI,SAAC7B,EAAMgC,GAC3B,OACE,qBACEC,QAAS,SAACC,GAAD,OAAO,EAAKzB,WAAWyB,EAAGlC,EAAKE,KACxCA,GAAIF,EAAKE,GAAK,UACd6B,UAAU,UAHZ,UAME,sBAAK7B,GAAIF,EAAKE,GAAK,WAAY6B,UAAU,WAAzC,UACE,6BACE,6BAAK/B,EAAKmC,aAEZ,6BACE,+CAIJ,sBACEjC,GAAIF,EAAKE,GAAK,eACd6B,UAAU,oBAFZ,UAIE,6BACE,gDAEF,6BACE,4BAAI/B,EAAKmC,aAEX,6BACE,+CAEF,6BACE,4BAAInC,EAAKoC,iBAEX,6BACE,2CAEF,6BACE,4BAAIpC,EAAKqC,aAGX,wBACEJ,QAAS,WACP,EAAKlC,WAAWC,IAFpB,kBAOA,wBACEiC,QAAS,WACP,EAAK1C,WAAWS,EAAKE,KAFzB,oBAOA,wBACE+B,QAAS,WACP,EAAKhC,YAAYD,EAAKE,KAF1B,uBAhDGF,EAAKE,kB,GAnFRoC,a,iBCIdC,G,MAAS,UAmIAC,E,kDAhIb,aAAe,IAAD,8BACZ,gBAwCFC,WAAa,SAACP,GACZA,EAAEQ,iBAEF,IAAIC,EACF,EAAK5B,MAAMqB,aAAaQ,UACxB,IACAC,SAAS,EAAK9B,MAAMqB,aAAaU,WAAa,GAC9C,IACA,EAAK/B,MAAMqB,aAAaW,cAEpB7B,EAAQrC,EAASY,WAAWC,IAAI,SAAS,EAAKC,MAAMC,QACpDoD,EAAc,CAClBb,SAAU,EAAKpB,MAAMoB,SACrBC,aAAcO,EACdN,SAAU,EAAKtB,MAAMsB,UAIvBnB,EAAM+B,KAAKD,GAEX,EAAKrD,MAAMuD,gBA7DC,EAiEdC,kBAAoB,SAACjB,GACnB,EAAK/B,SAAS,CACZ6C,YAAad,EAAEkB,OAAOC,SAnEZ,EAwEdC,gBAAkB,SAAC9D,GAEjB,IAAImD,EACF,EAAK5B,MAAMqB,aAAaQ,UACxB,IACAC,SAAS,EAAK9B,MAAMqB,aAAaU,WAAa,GAC9C,IACA,EAAK/B,MAAMqB,aAAaW,cAEZlE,EAASY,WAAWC,IAAI,SAAW,EAAKC,MAAMC,QACtDC,MAAML,GAAQ+D,OAAO,CACzBpB,SAAU,EAAKpB,MAAMoB,SACrBC,aAAcO,EACdN,SAAU,EAAKtB,MAAMsB,YAnFvB,EAAKtB,MAAQ,CACTyC,SAPI,MAQJhE,OAAQ,GACR2C,SAAU,GACVC,aAAc,IAAIqB,KAClBpB,SAAU,IAEd,EAAKc,kBAAoB,EAAKA,kBAAkBO,KAAvB,gBATb,E,gEAcZ,GAAmD,IAA/C/B,OAAOC,KAAKP,KAAK1B,MAAMgE,aAAaC,QAAgBvC,KAAK1B,MAAMgE,YAAYE,cAAgBlC,OAAO,CAEtG,IAAImC,EAAYzC,KAAK1B,MAAMgE,YAAYvB,aAAa2B,MAAM,KAEtDvE,EAAS6B,KAAK1B,MAAMgE,YAAYzD,GAChCiC,EAAWd,KAAK1B,MAAMgE,YAAYxB,SAClCC,EAAe,IAAIqB,MAAMK,EAAU,GAAIA,EAAU,GAAK,GAAIA,EAAU,IACpEzB,EAAWhB,KAAK1B,MAAMgE,YAAYtB,SAEtChB,KAAKlB,SAAS,CACZqD,SAAUjB,EACV/C,OAAQA,EACR2C,SAAUA,EACVC,aAAcA,EACdC,SAAUA,O,sCAOEM,GACdtB,KAAKlB,SAAS,CACZiC,aAAcO,M,+BAoDR,IAAD,OACP,OACE,qBAAKZ,UAAU,oBAAf,SACE,uBAAMiC,SAAU3C,KAAK8B,kBAArB,UACE,uBAAOpB,UAAU,UAAUkC,QAAQ,cAAnC,gCACA,uBACElC,UAAU,eACVmC,KAAK,OACLhE,GAAG,cACHmD,MAAOhC,KAAKN,MAAMoB,SAClB6B,SAAU,SAACtD,GAAD,OACR,EAAKP,SAAS,CAAEgC,SAAUzB,EAAM0C,OAAOC,WAG3C,uBAAOY,QAAQ,eAAf,6BACA,cAAC,IAAD,CACElC,UAAU,aACVoC,SAAU9C,KAAKN,MAAMqB,aACrBgC,QAAW,IAAIX,KACfJ,MAAOhC,KAAKN,MAAMqB,aAClB4B,SAAU,SAACrB,GAAD,OAAU,EAAK0B,gBAAgB1B,MAE3C,uBAAO2B,MAAM,cAAcL,QAAQ,WAAnC,kBACA,0BACEK,MAAM,kBACNjB,MAAOhC,KAAKN,MAAMsB,SAClB2B,SAAU,SAACtD,GAAD,OACR,EAAKP,SAAS,CAAEkC,SAAU3B,EAAM0C,OAAOC,WAxHzC,QA2HDhC,KAAKN,MAAMyC,UAAoB,wBAAQvB,QAASZ,KAAKoB,WAAtB,0BAC/BpB,KAAKN,MAAMyC,WAAajB,GAAU,wBAAQN,QAAU,WAAO,EAAKqB,gBAAgB,EAAKvC,MAAMvB,SAAzD,kC,GAzHtB8C,a,OCJvBiC,EAAQ,KAGR,IAAMC,EAAO,OACPC,EAAU,UAkGDC,E,kDA/Fb,aAAc,IAAD,8BAEX,gBACK3D,MAAQ,CACX4D,iBAAiBH,EACjBb,YAAa,GACb/D,OAAO,IAGT,EAAKG,WAAa,EAAKA,WAAW2D,KAAhB,gBAClB,EAAKkB,cAAgB,EAAKA,cAAclB,KAAnB,gBAGrB7E,EAASgG,OAAOC,oBAChBjG,EAASgG,OAAOE,oBAAmB,SAACC,GAClC,GAAIA,EAAM,CACR,IAAIpF,EAASoF,EAAKC,IAClB,EAAK9E,SAAS,CACZP,OAAOA,QAlBF,E,0DAyBCsF,GAED7E,SAASC,eAAe,eAC9B6E,SAAU,EACf9D,KAAKlB,SAAS,CACZwE,iBAAiBO,M,iCAOVlF,GACTqB,KAAKlB,SAAS,CACZwD,YAAa3D,IAEfqB,KAAKuD,cAAcH,K,+BAGZ,IAAD,OACN,OACE,qBAAK1C,UAAU,MAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,uBAAOmC,KAAK,WAAWhE,GAAG,cAAc6B,UAAU,gBAClD,qBAAKA,UAAU,cACf,qBAAIA,UAAU,OAAd,UACE,oBAAIA,UAAU,UAAd,SACE,qBAAKA,UAAU,YAAf,SACE,qEAGJ,oBAAIA,UAAU,UAAd,SACE,wBAAQE,QAAS,kBAAM,EAAK2C,cAAcJ,IAA1C,SACE,oDAGJ,oBAAIzC,UAAU,aAAd,SACE,wBACE7B,GAAG,gBACH+B,QAAS,kBAAM,EAAK2C,cAAcH,IAFpC,SAIE,oDAGJ,oBAAI1C,UAAU,oBAGlB,sBAAKA,UAAU,cAAf,UACGV,KAAKN,MAAM4D,mBAAqBH,GAAQnD,KAAKN,MAAMnB,QAClD,cAAC,EAAD,CACEA,OAAQyB,KAAKN,MAAMnB,OACnBG,WAAY,SAACC,GAAD,OAAU,EAAKD,WAAWC,IACtCkD,aAAc,kBAAM,EAAK0B,cAAcJ,MAG1CnD,KAAKN,MAAM4D,mBAAqBF,GAC/B,cAAC,EAAD,CACE7E,OAAQyB,KAAKN,MAAMnB,OACnB+D,YAAatC,KAAKN,MAAM4C,YACxBT,aAAc,kBAAM,EAAK0B,cAAcJ,kB,GAtFrClC,aCCH8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1F,SAASC,eAAe,SAM1B8E,K","file":"static/js/main.4b5ac270.chunk.js","sourcesContent":["// import firebase SDK from npm install firebase nade package\r\nimport firebase from 'firebase/app';\r\n// realtime database library\r\nimport 'firebase/database';\r\n\r\n// goal tracker app configuration object\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA5rvQYwW9E00UGAAj8f0IxOQdkHbKgdFA\",\r\n  authDomain: \"goal-tracker-app-53782.firebaseapp.com\",\r\n  databaseURL: \"https://goal-tracker-app-53782.firebaseio.com\",\r\n  projectId: \"goal-tracker-app-53782\",\r\n  storageBucket: \"goal-tracker-app-53782.appspot.com\",\r\n  messagingSenderId: \"747924635501\",\r\n  appId: \"1:747924635501:web:4e5f0c23821f043ace2464\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import { Component } from 'react';\r\nimport firebase from \"./firebase.js\";\r\n\r\nclass Goals extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      goals: [],\r\n      active: [],\r\n      dbRef: null,\r\n      achieved: false\r\n    };\r\n    console.log(this.state.active, \"ttt\");\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"tripp\", this.props.userId);\r\n    // make a reference to the database by user\r\n    const dbRef = firebase.database().ref(\"users/\" + this.props.userId);\r\n    this.setState({\r\n      dbRef: dbRef,\r\n    });\r\n    // get data from the database\r\n    dbRef.on(\"value\", (data) => {\r\n      const firebaseDataObj = data.val(); // get by userId obj\r\n      if (firebaseDataObj) {\r\n        const newGoals = Object.keys(firebaseDataObj).map((key) => {\r\n          return { ...firebaseDataObj[key], id: key }; //pass key as variable id to the newGoals object\r\n        });\r\n        this.setState({\r\n          goals: newGoals,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          goals: [],\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  // function that deletes goal from the db\r\n  removeGoal = (goalId) => {\r\n    const dbRef = firebase.database().ref(\"users/\" + this.props.userId);\r\n    dbRef.child(goalId).remove();\r\n  };\r\n\r\n  // function that updates goals\r\n  updateGoal = (goal) => {\r\n    this.props.updateGoal(goal);\r\n  };\r\n\r\n  achieveGoal = (id) => {\r\n    this.setState({\r\n      achieved: true\r\n    })\r\n    let oneGoalElement = document.getElementById(id + \"oneGoal\");\r\n    oneGoalElement.style.background = \"#FE0000FF\";\r\n  }\r\n\r\n  // show the more goal info\r\n  handleShow = (event, id) => {\r\n    event.stopPropagation();\r\n    let goalNameElement = document.getElementById(id + \"goalName\");\r\n    let fullGoalInfoElement = document.getElementById(id + \"fullGoalInfo\");\r\n\r\n    if (goalNameElement.style.display === \"none\") {\r\n      goalNameElement.style.display = \"block\";\r\n      fullGoalInfoElement.style.display = \"none\";\r\n    } else {\r\n      goalNameElement.style.display = \"none\";\r\n      fullGoalInfoElement.style.display = \"block\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"goalContainer\">\r\n        <h1>My goal list</h1>\r\n        <div className=\"moreGoalInfoButton clearfix\">\r\n          <ul>\r\n            {this.state.goals.map((goal, index) => {\r\n              return (\r\n                <li\r\n                  onClick={(e) => this.handleShow(e, goal.id)}\r\n                  id={goal.id + \"oneGoal\"}\r\n                  className=\"oneGoal\"\r\n                  key={goal.id}\r\n                >\r\n                  <div id={goal.id + \"goalName\"} className=\"goalName\">\r\n                    <li>\r\n                      <h4>{goal.goalName}</h4>\r\n                    </li>\r\n                    <li>\r\n                      <p>Read more</p>\r\n                    </li>\r\n                  </div>\r\n\r\n                  <div\r\n                    id={goal.id + \"fullGoalInfo\"}\r\n                    className=\"fullGoalInfo hide\"\r\n                  >\r\n                    <li>\r\n                      <span>Goal Name:</span>\r\n                    </li>\r\n                    <li>\r\n                      <p>{goal.goalName}</p>\r\n                    </li>\r\n                    <li>\r\n                      <span>Deadline:</span>\r\n                    </li>\r\n                    <li>\r\n                      <p>{goal.goalDeadline}</p>\r\n                    </li>\r\n                    <li>\r\n                      <span>Note:</span>\r\n                    </li>\r\n                    <li>\r\n                      <p>{goal.goalNote}</p>\r\n                    </li>\r\n\r\n                    <button\r\n                      onClick={() => {\r\n                        this.updateGoal(goal);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        this.removeGoal(goal.id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        this.achieveGoal(goal.id);\r\n                      }}\r\n                    >\r\n                      Done\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Goals;","import { Component } from \"react\";\r\nimport firebase from './firebase.js';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Goals from './Goals.js';\r\n\r\nconst ADD = 'ADD';\r\nconst UPDATE = 'UPDATE';\r\n\r\nclass AddGoals extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        goalView: ADD,\r\n        goalId: \"\",\r\n        goalName: \"\",\r\n        goalDeadline: new Date(),\r\n        goalNote: \"\"\r\n    };\r\n    this.formSubmitNewGoal = this.formSubmitNewGoal.bind(this);\r\n  }   \r\n\r\n  componentDidMount() {\r\n    // check if goal object is not empty, if it not empty do something\r\n    if (Object.keys(this.props.currentGoal).length !== 0 && this.props.currentGoal.constructor === Object){    \r\n    // split \"/\" from the deadline date for converting string to the object\r\n    let dateParts = this.props.currentGoal.goalDeadline.split(\"/\");\r\n    // save goal that user wants to update\r\n    let goalId = this.props.currentGoal.id;\r\n    let goalName = this.props.currentGoal.goalName;\r\n    let goalDeadline = new Date(+dateParts[2], dateParts[1] - 1, +dateParts[0]);    \r\n    let goalNote = this.props.currentGoal.goalNote;\r\n    // console.log(goalDeadline,'goalDeadline from current');\r\n    this.setState({  \r\n      goalView: UPDATE,   \r\n      goalId: goalId,\r\n      goalName: goalName,\r\n      goalDeadline: goalDeadline,\r\n      goalNote: goalNote\r\n    })\r\n\r\n  }\r\n  }\r\n\r\n  //create function that changes date was selected by user\r\n  setGoalDeadline(date) {\r\n    this.setState({\r\n      goalDeadline: date\r\n    });\r\n  }\r\n\r\n  addNewGoal = (e) => {\r\n    e.preventDefault(); \r\n    // convert date to dd/mm/yyyy \r\n    let date = \r\n      this.state.goalDeadline.getDate() +\r\n      \"/\" +\r\n      parseInt(this.state.goalDeadline.getMonth() + 1) +\r\n      \"/\" +\r\n      this.state.goalDeadline.getFullYear();\r\n    // make a reference to the database\r\n    const dbRef = firebase.database().ref(\"users/\"+this.props.userId);\r\n    const userNewGoal = {\r\n      goalName: this.state.goalName,\r\n      goalDeadline: date,\r\n      goalNote: this.state.goalNote\r\n    };  \r\n\r\n    // console.log(userNewGoal, \"check the username goal\")\r\n    dbRef.push(userNewGoal);\r\n    \r\n    this.props.displayGoals();\r\n  };\r\n\r\n  //form submition\r\n  formSubmitNewGoal = (e) => {\r\n    this.setState({\r\n      userNewGoal: e.target.value\r\n    });    \r\n  };\r\n\r\n  //update goal\r\n  editCurrentGoal = (goalId) =>{\r\n    // convert date to dd/mm/yyyy \r\n    let date =\r\n      this.state.goalDeadline.getDate() +\r\n      \"/\" +\r\n      parseInt(this.state.goalDeadline.getMonth() + 1) +\r\n      \"/\" +\r\n      this.state.goalDeadline.getFullYear();\r\n    //make a reference to the database\r\n    const dbRef = firebase.database().ref(\"users/\" + this.props.userId);\r\n    dbRef.child(goalId).update({\r\n      goalName: this.state.goalName,\r\n      goalDeadline: date,\r\n      goalNote: this.state.goalNote\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"addGoalsGontainer\">\r\n        <form onChange={this.formSubmitNewGoal}>\r\n          <label className=\"newGoal\" htmlFor=\"newGoalName\">What is your goal?</label>\r\n          <input\r\n            className=\"inputNewGoal\"\r\n            type=\"text\"\r\n            id=\"newGoalName\" \r\n            value={this.state.goalName}\r\n            onChange={(event) =>\r\n              this.setState({ goalName: event.target.value })\r\n            }\r\n          />\r\n          <label htmlFor=\"goalDeadline\">Pick a deadline</label>\r\n          <DatePicker\r\n            className=\"datePicker\"\r\n            selected={this.state.goalDeadline}\r\n            minDate = {new Date()}\r\n            value={this.state.goalDeadline}\r\n            onChange={(date) => this.setGoalDeadline(date)}\r\n          />\r\n          <label class=\"newGoalNote\" htmlFor=\"goalNote\">Note</label>\r\n          <textarea  \r\n            class=\"textNewGoalNote\"        \r\n            value={this.state.goalNote}\r\n            onChange={(event) =>\r\n              this.setState({ goalNote: event.target.value })\r\n            }\r\n          ></textarea>\r\n          {this.state.goalView === ADD && <button onClick={this.addNewGoal}>Add new goal</button>}\r\n          {this.state.goalView === UPDATE && <button onClick={ () => {this.editCurrentGoal(this.state.goalId)}}>Update goal</button>}\r\n         \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddGoals;","import { Component, useState, useEffect } from 'react';\nimport firebase from './firebase.js';\nimport Goals from './Goals.js';\nimport AddGoals from './AddGoals.js';\nimport './App.scss';\nrequire(\"firebase/auth\");\n\n//define global variables\nconst GOAL = 'GOAL';\nconst ADDGOAL = 'ADDGOAL';\n\nclass App extends Component{  \n  constructor(){\n    \n    super();\n    this.state = {\n      currentComponent:GOAL,\n      currentGoal: {},\n      userId:''    \n    };\n    \n    this.updateGoal = this.updateGoal.bind(this);\n    this.showComponent = this.showComponent.bind(this);\n\n    // create a unique user id that will help to have own list of goals\n    firebase.auth().signInAnonymously();\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        let userId = user.uid;\n        this.setState({\n          userId:userId\n        })\n      } \n    });\n  }\n  \n// function that displays component\n  showComponent(name){\n    // to close hamburger menu on click\n    let menu = document.getElementById(\"toggle-menu\");\n    menu.checked = false\n    this.setState({\n      currentComponent:name\n    })  \n    \n    // document.getElementById(\"navbar\").style.display = \"none\";  \n  }\n \n  // create function that passes goalObj with id that passes data back to the form \n  updateGoal(goal){\n    this.setState({\n      currentGoal: goal\n    })\n    this.showComponent(ADDGOAL);\n  }\n\n  render(){    \n    return (\n      <div className=\"App\">\n        <div className=\"appMain appWrapper\">\n          <div className=\"sideSection\">\n            <input type=\"checkbox\" id=\"toggle-menu\" className=\"toggle-menu\" />\n            <div className=\"hamburger\"></div>\n            <ul className=\"menu\">\n              <li className=\"userBox\">\n                <div className=\"goalQuote\">\n                  <p>Dreams don't work unless you do.</p>\n                </div>\n              </li>\n              <li className=\"goalBox\">\n                <button onClick={() => this.showComponent(GOAL)}>\n                  <span>My goal list</span>\n                </button>\n              </li>\n              <li className=\"addGoalBox\">\n                <button\n                  id=\"addGoalButton\"\n                  onClick={() => this.showComponent(ADDGOAL)}\n                >\n                  <span>Add new goal</span>\n                </button>\n              </li>\n              <li className=\"logoutBox\"></li>\n            </ul>\n          </div>\n          <div className=\"mainSection\">\n            {this.state.currentComponent === GOAL && this.state.userId && (\n              <Goals\n                userId={this.state.userId}\n                updateGoal={(goal) => this.updateGoal(goal)}\n                displayGoals={() => this.showComponent(GOAL)}\n              />\n            )}\n            {this.state.currentComponent === ADDGOAL && (\n              <AddGoals\n                userId={this.state.userId}\n                currentGoal={this.state.currentGoal}\n                displayGoals={() => this.showComponent(GOAL)}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}